1.模块独立：每个模块完成一个相对独立的特定子功能，衡量独立程度的标准：耦合性和内聚性。
2.耦合：是两个模块之间相对独立性的度量，取决各模块之间接口的复杂程度、调用模块的方式和通过接口的信息类型。
①无直接耦合：两个模块不传递任何信息，独立性最高。
②数据耦合：两模块之间简单调用，传递简单的数据值。
③标记耦合：传递的是数据结构。
④控制耦合：传递的是控制变量。
⑤外部耦合：模块间通过软件外的环境联结（耦合到特定设备、格式、通讯协议）。
⑥公共耦合：通过一个公共数据环境相互作用。
⑦内容耦合：一个模块直接使用另一模块的内部数据，或通过非正常入口转入另一模块内部。
3.内聚：对一个模块内部各个元素彼此结合紧密程度的度量。一个内聚程度高的模块应当制作一件事情。内聚性↑独立性↓。
①偶然内聚（巧合内聚）：一个模块内的各处理元素之间没有任何联系。
②逻辑内聚：模块内执行若干个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。
③时间内聚：把需要同时执行的动作组合在一起形成的模块。
④过程内聚：一个模块完成多个任务，这些任务必须按指定的过程执行。
⑤通信内聚：模块内所有元素在同一个数据结构上操作，或各处理相同的输入数据或产生相同的输出数据。
⑥顺序内聚：一个模块中各处理元素都密切相关于同一功能且必须顺序执行，前一功能元素的输出就是下一功能元素的输入，
⑦功能内聚：最强的内聚，所有元素共同完成同一功能，缺一不可。
元素划分模块尽量做到高内聚、低耦合，提高模块独立性。
4.设计原则：
①分解-协调原则：整个系统是一个整体，具有整体的目的和功能。
②自顶向下原则：确定系统总的功能目的，逐层分解。
③信息屏蔽、抽象原则：上层模块只规定下层模块做什么和所属模块间的协调关系，不规定如何做。
④一致性原则：整个软件设计过程具有统一的规范、统一的标准和统一的文件模式。
⑤明确性原则：每个模块必须功能明确、借口明确，消除多重功能和无用接口。
⑥模块之间的耦合尽可能小，内聚度尽可能高。
⑦模块的扇入系数和扇出系数要合理。一个模块直接调用其他模块的个数称为扇出系数；反之，一个模块被其他模块调用，直接调用它的模块个数称为扇入系数。好的系统平均扇入、扇出系数为3或4，不超过7。
⑧模块的规模适当。过大的模块分解不充分，使内部包含若干部分的内容；过小的模块会降低模块的独立性，造成系统接口的复杂性。
⑨模块的作用范围应该在其控制范围内。
5.数据字典：四类条目：数据流、数据项、数据存储和基本加工。数据项是组成数据流和数据存储的最小元素。源点、终点不在系统之内。数据流图的元素在数据字典中进行定义。
